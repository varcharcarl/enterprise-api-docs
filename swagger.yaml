---
swagger: "2.0"
info:
  description: "This is a sample server Petstore server. You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). For this sample, you can use the api key `special-key` to test the authorization filters."
  version: "1.0.5"
  title: "Swagger Petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
  - name: "pet"
    description: "Everything about your Pets"
    externalDocs:
      description: "Find out more"
      url: "http://swagger.io"
  - name: "store"
    description: "Access to Petstore orders"
  - name: "user"
    description: "Operations about user"
    externalDocs:
      description: "Find out more about our store"
      url: "http://swagger.io"
  - name: "report"
    description: "Various reports"
schemes:
  - "https"
  - "http"
paths:
  /user-completed-courses:
    post:
      summary: Get completed courses and assignments by user ID
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "email of the user for which completed courses should be listed"
          required: true
          schema:
            $ref: "#/definitions/UserCompletedCoursesRequest"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/UserCompletedCoursesResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user-active-courses:
    post:
      tags:
        - report
      summary: Get active courses and assignments by user ID
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "email of the user for which completed courses should be listed"
          required: true
          schema:
            $ref: "#/definitions/UserActiveCoursesRequest"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/UserActiveCoursesResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorResponse"

  /company-stats:
    post:
      tags:
        - report
      summary: Get company user statistics by user ID
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Company stats request body"
          required: true
          schema:
            $ref: "#/definitions/CompanyStatsRequest"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/CompanyStatsResponse"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /team-stats:
    post:
      tags:
        - report
      summary: Get team statistics
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Team stats request body"
          required: true
          schema:
            $ref: "#/definitions/TeamStatsRequest"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/TeamStatsResponse"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /proficiency-report:
    post:
      tags:
        - report
      summary: Get proficiency report
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Proficiency report request body"
          required: true
          schema:
            $ref: "#/definitions/ProficiencyReportRequest"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/ProficiencyReportResponse"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /lp-report:
    post:
      tags:
        - report
      summary: Get learning path report
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Learning path report request body"
          required: true
          schema:
            $ref: "#/definitions/LPReportRequest"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/LPReportResponse"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /lp-completed-report:
    post:
      tags:
        - report
      summary: Get learning path completed report
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Learning path completed report request body"
          required: true
          schema:
            $ref: "#/definitions/LPCompletedReportRequest"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/LPCompletedReportResponse"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /journey-report:
    post:
      tags:
        - report
      summary: Get journey report
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Journey report request body"
          required: true
          schema:
            $ref: "#/definitions/JourneyReportRequest"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/JourneyReportResponse"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user-activity:
    post:
      tags:
        - report
      summary: Get user activity
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User activity request body"
          required: true
          schema:
            $ref: "#/definitions/UserActivityRequest"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/UserActivityResponse"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /individual-journey-report:
    post:
      tags:
        - report
      summary: Get individual journey report
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Individual journey report request body"
          required: true
          schema:
            $ref: "#/definitions/IndividualJourneyReportRequest"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/IndividualJourneyReportResponse"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /top-users:
    post:
      tags:
        - report
      summary: Get top users (overall or monthly)
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Top users report request body"
          required: true
          schema:
            $ref: "#/definitions/TopUsersRequest"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/TopUsersResponse"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /user-report:
    post:
      tags:
        - report
      summary: Get user report
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User report request body"
          required: true
          schema:
            $ref: "#/definitions/UserReportRequest"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/UserReportResponse"
        500:
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"

securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "https://petstore.swagger.io/oauth/authorize"
    flow: "implicit"
    scopes:
      read:pets: "read your pets"
      write:pets: "modify pets in your account"
definitions:
  ErrorResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      error:
        type: "boolean"
      message:
        type: "string"
  UserCompletedCoursesRequest:
    type: "object"
    properties:
      user_id:
        type: "string"
        example: "olaniyi.ajayi@we45.com"
  UserCompletedCoursesResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      error:
        type: "boolean"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            event_name:
              type: "string"
            sk:
              type: "string"
            vid_duration:
              type: "number"
              format: "float"
            lab_duration:
              type: "number"
              format: "float"
      assignments:
        type: "array"
        items:
          type: "object"
          properties:
            sk:
              type: "string"
            end_date:
              type: "string"
              format: "date"
            name:
              type: "string"
            start_date:
              type: "string"
              format: "date"
  UserActiveCoursesRequest:
    type: "object"
    properties:
      user_id:
        type: "string"
        example: "olaniyi.ajayi@we45.com"
  UserActiveCoursesResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      error:
        type: "boolean"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            event_name:
              type: "string"
            sk:
              type: "string"
            vid_duration:
              type: "number"
              format: "float"
            lab_duration:
              type: "number"
              format: "float"
      assignments:
        type: "array"
        items:
          type: "object"
          properties:
            sk:
              type: "string"
            end_date:
              type: "string"
              format: "date"
            name:
              type: "string"
            start_date:
              type: "string"
              format: "date"
  CompanyStatsRequest:
    type: "object"
    properties:
      user_id:
        type: "string"
        example: "olaniyi.ajayi@we45.com"
  CompanyStatsResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      data:
        type: "array"
        items:
          type: "object"
          properties:
            first_name:
              type: "string"
            last_name:
              type: "string"
            video_count:
              type: "integer"
            lab_count:
              type: "integer"
            media_count:
              type: "integer"
            quiz_count:
              type: "integer"
            email:
              type: "string"
  TeamStatsRequest:
    type: "object"
    properties:
      team_id:
        type: "string"
        example: "team_062c0918-e7eb-40e0-af3b-ecdca8b91f9f"
      select:
        type: "string"
        example: "overall"
  TeamStatsResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      data:
        type: "object"
        properties:
          activity:
            type: "array"
            items:
              type: "object"
              properties:
                activity:
                  type: "integer"
                date:
                  type: "string"
                  format: "date"
          progress:
            type: "array"
            items:
              type: "object"
              properties:
                course:
                  type: "string"
                averageProgress:
                  type: "number"
                  format: "float"
                duration:
                  type: "number"
                  format: "float"
          assignments:
            type: "array"
            items:
              type: "object"
          assign_completed:
            type: "array"
            items:
              type: "object"
              properties:
                assign:
                  type: "object"
                  properties:
                    sk:
                      type: "string"
                    end_date:
                      type: "string"
                      format: "date"
                    name:
                      type: "string"
                    start_date:
                      type: "string"
                      format: "date"
                users:
                  type: "array"
                  items:
                    type: "string"
          stat:
            type: "object"
            properties:
              assignments_completed:
                type: "number"
                format: "float"
              badges:
                type: "integer"
              challenges_completed:
                type: "number"
                format: "float"
              doc_type:
                type: "string"
              enrolled:
                type: "number"
                format: "float"
              lab_minutes:
                type: "number"
                format: "float"
              labs_completed:
                type: "number"
                format: "float"
              video_minutes:
                type: "number"
                format: "float"
              videos_completed:
                type: "number"
                format: "float"
          recent:
            type: "array"
            items:
              type: "object"
              properties:
                activity:
                  type: "string"
                item:
                  type: "string"
                date:
                  type: "string"
          items:
            type: "array"
            items:
              type: "object"
              properties:
                first_name:
                  type: "string"
                last_name:
                  type: "string"
                lab_minutes:
                  type: "number"
                  format: "float"
                course_minutes:
                  type: "number"
                  format: "float